b) cambiando la condicion del while de "while (numPrimes < n)" a "while (numPrimes < 4)" se consigue:
		t1(n=3) =
			Prime: 2
			Prime: 3
			Prime: 5
		lo que es correcto.

		t2(n=5) = 
			Prime: 2
			Prime: 3
			Prime: 5
			Prime: 7

		pero se esperaba: 	
			Prime: 2
			Prime: 3
			Prime: 5
			Prime: 7
			Prime: 11.

c) Test t(n=1), al realizar la comparacion con el while el programa pasa directamente a la sentencia for del final.

d)Node Coverage: RT={1,2,3,4,5,6,7,8,9,10,11,12}
	
Edge Coverage: RT={(1,2),(2,3),(2,12),(3,4),(4,5),(5,6),(5,9),(6,7),(6,8),(7,5),(8,9),(9,10),(9,11),(10,11),(11,2)}

Prime Path Coverage: RT={[1,2,12],[5,6,7,5],[6,7,5,6],[7,5,6,7],[1,2,3,4,5,6,7],[1,2,3,4,5,9,11],[2,3,4,5,9,11,2],[3,4,5,9,11,2,12],[3,4,5,9,11,2,3],[4,5,9,11,2,3,4],[5,9,11,2,3,4,5],[6,7,5,9,11,2,12],[9,11,2,3,4,5,9],[10,11,2,3,5,9,10],[11,2,3,4,5,9,11],[1,2,3,4,5,9,10,11],[2,3,4,5,9,10,11,2],[3,4,5,9,10,11,2,12],[3,4,5,9,10,11,2,3],[4,5,9,10,11,2,3,4],[5,9,10,11,2,3,4,5],[6,7,5,9,11,2,3,4],[6,7,5,9,10,11,2,12],[7,5,9,10,11,2,3,4],[9,10,11,2,3,4,5,9],[11,2,3,4,5,9,10,11],[8,9,11,2,3,4,5,6,7],[1,2,3,4,5,6,8,9,11],[2,3,4,5,6,8,9,11,2],[3,4,5,6,8,9,11,2,3],[3,4,5,6,8,9,11,2,12],[4,5,6,8,9,11,2,3,4],[5,6,8,9,11,2,3,4,5],[6,8,9,11,2,3,4,5,6],[6,7,5,9,10,11,2,3,4],[7,5,6,8,9,11,2,3,4],[7,5,6,8,9,10,11,2,12],[8,9,11,2,3,4,5,6,8],[9,11,2,3,4,5,6,8,9],[10,11,2,3,5,6,8,9,10],[11,2,3,4,5,6,8,9,11],[1,2,3,4,5,6,8,9,10,11],[2,3,4,5,6,8,9,10,11,2],[3,4,5,6,8,9,10,11,2,3],[3,4,5,6,8,9,10,11,2,12],[4,5,6,8,9,10,11,2,3,4],[5,6,8,9,10,11,2,3,4,5],[6,8,9,10,11,2,3,4,5,6],[7,5,6,8,9,10,11,2,3,4],[8,9,10,11,2,3,4,5,6,7],[8,9,10,11,2,3,4,5,6,8],[9,10,11,2,3,4,5,6,8,9]}

Busqueda de caminos primos:
	Caminos simples: (! = fin, * = loop)
	Len 0:
	[1]
	[2]
	[3]
	[4]
	[5]
	[6]
	[7]
	[8]
	[9]
	[10]
	[11]
	[12]!

	Len 1:
	[1,2] 
	[2,3] 
	[2,12]!
	[3,4] 
	[4,5]
	[5,6]
	[5,9] 
	[6,7] 
	[6,8]
	[7,5]
	[8,9]
	[9,10]
	[9,11]
	[10,11]
	[11,2]

	Len 2:
	[1,2,3]	
	[1,2,12]!	
	[2,3,4]
	[3,4,5]
	[4,5,6] 
	[4,5,9] 
	[5,6,8] 
	[5,6,7] 
	[5,9,10] 
	[5,9,11] 
	[6,7,5] 
	[6,8,9] 
	[7,5,6] 
	[7,5,9] 
	[8,9,10]
	[8,9,11]
	[9,10,11] 
	[9,11,2] 
	[10,11,2]
	[11,2,3]
	[11,2,12]!

	Len 3:
	[1,2,3,4] 
	[2,3,4,5]
	[3,4,5,6] 
	[3,4,5,9]
	[4,5,6,8] 
	[4,5,6,7] 
	[4,5,9,10] 
	[4,5,9,11]
	[5,9,11,2] 
	[5,9,10,11] 
	[5,6,7,5]* 
	[5,6,8,9] 
	[6,7,5,6]* 
	[6,7,5,9] 
	[6,8,9,10] 
	[6,8,9,11] 
	[7,5,6,7]* 
	[7,5,6,8] 
	[7,5,9,10] 
	[7,5,9,11] 
	[8,9,10,11] 
	[8,9,11,2] 
	[9,10,11,2] 
	[9,11,2,12]! 
	[9,11,2,3] 
	[10,11,2,3]
	[10,11,2,12]!
	[11,2,3,4]

	Len 4:
	[1,2,3,4,5]	
	[2,3,4,5,6] 
	[2,3,4,5,9] 
	[3,4,5,6,7] 
	[3,4,5,6,8] 
	[3,4,5,9,10] 
	[3,4,5,9,11]
	[4,5,6,8,9] 
	[4,5,9,10,11] 
	[4,5,9,11,2] 
	[5,6,8,9,10] 
	[5,6,8,9,11] 
	[5,9,10,11,2] 
	[5,9,11,2,3] 
	[5,9,11,2,12]! 
	[6,7,5,9,11]
	[6,7,5,9,10] 
	[6,8,9,10,11] 
	[6,8,9,11,2] 
	[7,5,6,8,9] 
	[7,5,9,10,11] 
	[7,5,9,11,2] 
	[8,9,10,11,2] 
	[8,9,11,2,2] 
	[8,9,11,2,12]! 
	[9,10,11,2,3] 
	[9,11,2,3,4] 
	[9,10,11,2,12]! 
	[10,11,2,3,4]
	[11,2,3,4,5]

	Len 5:
	[1,2,3,4,5,6] 
	[1,2,3,4,5,9]
	[2,3,4,5,6,8] 
	[2,3,4,5,6,7]
	[2,3,4,5,9,10] 
	[2,3,4,5,9,11]
	[3,4,5,6,8,9] 
	[3,4,5,9,11,2]
	[3,4,5,9,10,11] 
	[4,5,6,8,9,10] 
	[4,5,6,8,9,11]
	[4,5,9,10,11,2] 
	[4,5,9,11,2,3] 
	[4,5,9,11,2,12]! 
	[5,6,8,9,10,11] 
	[5,6,8,9,11,2] 
	[5,9,10,11,2,3] 
	[5,9,11,2,3,4] 
	[5,9,10,11,2,12]! 
	[6,7,5,9,11,2] 
	[6,7,5,9,10,11] 
	[6,8,9,10,11,2] 
	[6,8,9,11,2,3] 
	[6,8,9,11,2,12]! 
	[7,5,6,8,9,10] 
	[7,5,6,8,9,11] 
	[7,5,9,10,11,2] 
	[7,5,9,11,2,3] 
	[7,5,9,11,2,12]! 
	[8,9,10,11,2,3] 
	[8,9,10,11,2,12]! 
	[8,9,11,2,3,4]
	[9,10,11,2,3,4] 
	[9,11,2,3,4,5] 
	[10,11,2,3,4,5]
	[10,11,2,3,5,9] 
	[11,2,3,4,5,6] 
	[11,2,3,4,5,9] 

	Len 6:
	[1,2,3,4,5,6,7]
	[1,2,3,4,5,6,8] 
	[1,2,3,4,5,9,10] 
	[1,2,3,4,5,9,11]
	[2,3,4,5,6,8,9] 
	[2,3,4,5,9,10,11] 
	[2,3,4,5,9,11,2]*
	[3,4,5,6,8,9,10] 
	[3,4,5,6,8,9,11]
	[3,4,5,9,10,11,2]
	[3,4,5,9,11,2,3]*
	[3,4,5,9,11,2,12]!
	[4,5,6,8,9,10,11] 
	[4,5,6,8,9,11,2]
	[4,5,9,10,11,2,3] 
	[4,5,9,11,2,3,4]* 
	[4,5,9,10,11,2,12]!
	[5,6,8,9,10,11,2] 
	[5,6,8,9,11,2,3] 
	[5,9,11,2,3,4,5]* 
	[5,6,8,9,11,2,12]!
	[6,7,5,9,11,2,12]! 
	[6,7,5,9,11,2,3] 
	[6,7,5,9,10,11,2] 
	[6,8,9,10,11,2,3] 
	[6,8,9,10,11,2,12]! 
	[6,8,9,11,2,3,4]
	[7,5,6,8,9,10,11] 
	[7,5,6,8,9,11,2] 
	[7,5,9,10,11,2,3] 
	[7,5,9,10,11,2,12]! 
	[7,5,9,11,2,3,4]
	[8,9,10,11,2,3,4]
	[8,9,11,2,3,4,5] 
	[9,10,11,2,3,4,5] 
	[9,11,2,3,4,5,6] 
	[9,11,2,3,4,5,9]* 
	[10,11,2,3,4,5,6] 
	[10,11,2,3,5,6,8]
	[10,11,2,3,5,9,10]*
	[11,2,3,4,5,6,7] 
	[11,2,3,4,5,6,8] 
	[11,2,3,4,5,9,10]
	[11,2,3,4,5,9,11]*

	Len 7:
	[1,2,3,4,5,6,8,9] 
	[1,2,3,4,5,9,10,11] 
	[2,3,4,5,6,8,9,10] 
	[2,3,4,5,6,8,9,11] 
	[2,3,4,5,9,10,11,2]*
	[3,4,5,6,8,9,10,11] 
	[3,4,5,6,8,9,11,2]
	[3,4,5,9,10,11,2,3]*
	[3,4,5,9,10,11,2,12]!
	[4,5,6,8,9,10,11,2] 
	[4,5,6,8,9,11,2,3] 
	[4,5,9,10,11,2,3,4]* 
	[4,5,6,8,9,10,11,12]! 
	[5,6,8,9,10,11,2,3] 
	[5,6,8,9,11,2,3,4] 
	[5,9,10,11,2,3,4,5]* 
	[5,6,8,9,10,11,2,12]! 
	[6,7,5,9,11,2,3,4] 
	[6,7,5,9,10,11,2,3] 
	[6,7,5,9,10,11,2,12]! 
	[6,8,9,10,11,2,3,4] 
	[6,8,9,11,2,3,4,5]
	[7,5,6,8,9,10,11,2] 
	[7,5,6,8,9,11,2,3] 
	[7,5,9,10,11,2,3,4] 
	[8,9,10,11,2,3,4,5] 
	[8,9,11,2,3,4,5,6] 
	[9,10,11,2,3,4,5,6] 
	[9,10,11,2,3,4,5,9]* 
	[9,11,2,3,4,5,6,7] 
	[9,11,2,3,4,5,6,8]
	[10,11,2,3,4,5,6,7]
	[10,11,2,3,5,6,8,9] 
	[11,2,3,4,5,6,8,9] 
	[11,2,3,4,5,9,10,11]*

	Len 8:
	[1,2,3,4,5,6,8,9,10] 
	[1,2,3,4,5,6,8,9,11]
	[2,3,4,5,6,8,9,10,11]
	[2,3,4,5,6,8,9,11,2]*
	[3,4,5,6,8,9,10,11,2] 
	[3,4,5,6,8,9,11,2,3]*
	[3,4,5,6,8,9,11,2,12]!
	[4,5,6,8,9,10,11,2,12]! 
	[4,5,6,8,9,11,2,3,4]*
	[4,5,6,8,9,10,11,2,3]
	[5,6,8,9,10,11,2,3,4]
	[5,6,8,9,11,2,3,4,5]*
	[6,7,5,9,10,11,2,3,4]
	[6,8,9,10,11,2,3,4,5]
	[6,8,9,11,2,3,4,5,6]*
	[7,5,6,8,9,10,11,2,3]
	[7,5,6,8,9,11,2,3,4]
	[7,5,6,8,9,10,11,2,12]!
	[8,9,10,11,2,3,4,5,6]
	[8,9,11,2,3,4,5,6,7] 
	[8,9,11,2,3,4,5,6,8]*
	[9,10,11,2,3,4,5,6,7]
	[9,10,11,2,3,4,5,6,8]
	[9,11,2,3,4,5,6,8,9]*
	[10,11,2,3,5,6,8,9,10]*
	[11,2,3,4,5,6,8,9,10]
	[11,2,3,4,5,6,8,9,11]*

	Len 9:
	[1,2,3,4,5,6,8,9,10,11]
	[2,3,4,5,6,8,9,10,11,2]*
	[3,4,5,6,8,9,10,11,2,3]* 
	[3,4,5,6,8,9,10,11,2,12]!
	[4,5,6,8,9,10,11,2,3,4]*
	[5,6,8,9,10,11,2,3,4,5]*
	[6,8,9,10,11,2,3,4,5,6]*
	[7,5,6,8,9,10,11,2,3,4]
	[8,9,10,11,2,3,4,5,6,7]
	[8,9,10,11,2,3,4,5,6,8]*
	[9,10,11,2,3,4,5,6,8,9]*
	[11,2,3,4,5,6,8,9,10,11]


	Caminos primos:
	[1,2,12]!
	[5,6,7,5]*
	[6,7,5,6]*
	[7,5,6,7]*
	[1,2,3,4,5,6,7]
	[1,2,3,4,5,9,11]
	[2,3,4,5,9,11,2]*
	[3,4,5,9,11,2,12]!
	[3,4,5,9,11,2,3]*
	[4,5,9,11,2,3,4]*
	[5,9,11,2,3,4,5]*
	[6,7,5,9,11,2,12]!
	[9,11,2,3,4,5,9]*
	[10,11,2,3,5,9,10]*
	[11,2,3,4,5,9,11]*
	[1,2,3,4,5,9,10,11]
	[2,3,4,5,9,10,11,2]*
	[3,4,5,9,10,11,2,12]!
	[3,4,5,9,10,11,2,3]*
	[4,5,9,10,11,2,3,4]*
	[5,9,10,11,2,3,4,5]*
	[6,7,5,9,11,2,3,4]
	[6,7,5,9,10,11,2,12]!
	[7,5,9,10,11,2,3,4]
	[9,10,11,2,3,4,5,9]*
	[11,2,3,4,5,9,10,11]*
	[8,9,11,2,3,4,5,6,7]
	[1,2,3,4,5,6,8,9,11]
	[2,3,4,5,6,8,9,11,2]*
	[3,4,5,6,8,9,11,2,3]*
	[3,4,5,6,8,9,11,2,12]!
	[4,5,6,8,9,11,2,3,4]*
	[5,6,8,9,11,2,3,4,5]*
	[6,8,9,11,2,3,4,5,6]*
	[6,7,5,9,10,11,2,3,4]
	[7,5,6,8,9,11,2,3,4]
	[7,5,6,8,9,10,11,2,12]!
	[8,9,11,2,3,4,5,6,8]*
	[9,11,2,3,4,5,6,8,9]*
	[10,11,2,3,5,6,8,9,10]*
	[11,2,3,4,5,6,8,9,11]*
	[1,2,3,4,5,6,8,9,10,11]
	[2,3,4,5,6,8,9,10,11,2]*
	[3,4,5,6,8,9,10,11,2,3]*
	[3,4,5,6,8,9,10,11,2,12]!
	[4,5,6,8,9,10,11,2,3,4]*
	[5,6,8,9,10,11,2,3,4,5]*
	[6,8,9,10,11,2,3,4,5,6]*
	[7,5,6,8,9,10,11,2,3,4]
	[8,9,10,11,2,3,4,5,6,7]
	[8,9,10,11,2,3,4,5,6,8]*
	[9,10,11,2,3,4,5,6,8,9]*

e) Test Path: [1,2,3,4,5,6,7,5,6,8,9,10,11,2,12] 
	al no contener el arco (5,9) ni el arco (9,11) no cumple con Edge Coverage o Cobertura de Arcos

f) Es imposible encontrar caminos de test que consiguen cobertura de arcos pero no cobertura de caminos primos, dado que, cobertura de caminos primos subsume la cobertura de arcos.